import { cancelPrediction } from "../cancelPrediction.js";
import { getPrediction } from "../getPrediction.js";
import { pollPrediction } from "../pollPrediction.js";
/** Convert the result that we get from replicate to a more idiomatic TypeScript object.
 *
 * Also adds `get()`, `cancel()` and `poll()` methods.
 */
export const convertPrediction = (options, prediction) => {
    const predictionStatus = {
        id: prediction.id,
        version: prediction.version,
        get: async () => await getPrediction({ ...options, id: prediction.id }),
        cancel: async () => await cancelPrediction({ ...options, id: prediction.id }),
        poll: async (timeout) => await pollPrediction({ ...options, id: prediction.id, timeout: timeout }, predictionStatus),
        created_at: prediction.created_at ? new Date(prediction.created_at) : undefined,
        started_at: prediction.started_at ? new Date(prediction.started_at) : undefined,
        completed_at: prediction.completed_at ? new Date(prediction.completed_at) : undefined,
        status: prediction.status,
        input: prediction.input,
        output: prediction.output,
        error: prediction.error,
        logs: prediction.logs ?? undefined,
        metrics: {
            predict_time: prediction.metrics?.predict_time,
        },
    };
    return predictionStatus;
};
